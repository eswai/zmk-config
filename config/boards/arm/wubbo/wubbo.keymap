/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BT0 &bt BT_SEL 0
#define BT1 &bt BT_SEL 1
#define BT2 &bt BT_SEL 2
#define BT3 &bt BT_SEL 3
#define BT4 &bt BT_SEL 4

#define BASE 0
#define COLE 1
#define SYM 2
#define NUM 3
#define EXT 4

#define EUR RA(N5)

&sl {
  release-after-ms = <60000>;
};

/ {

	behaviors {
        sp: space_modtap {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_MODTAP";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
          combo_##NAME { \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
          };

        /* 
          ╭───────────────────────╮          ╭───────────────────────╮
          │          0   1   2  3 │          │  4   5   6   7        │
          │  8   9  10  11  12 13 │          │ 14  15  16  17  18  19│
          │     20  21  22  23 24  ───╮ ╭────  25  26  27  28  29    │
          ╰─────────────────╮  30  31 │ │ 32  33 ╭───────────────────╯
                            ╰─────────╯ ╰────────╯           
        */

        COMBO(left_esc, &kp ESC, 1 2, BASE NUM COLE)
	      COMBO(dmenu, &kp LG(D), 31 32, BASE NUM SYM COLE)
	      COMBO(ptt, &kp F24, 12 31, BASE NUM SYM COLE)
	      COMBO(quit, &kp LG(LS(Q)), 0 31, BASE NUM SYM COLE)
      	COMBO(extra_layer, &mo EXT, 30 31, BASE NUM SYM COLE)
        COMBO(qwerty_layer, &tog BASE, 0 1 2, BASE NUM SYM COLE)
        COMBO(colemak_layer, &tog COLE, 4 5 6, BASE NUM SYM COLE)
    };

    keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
                       &kp W      &kp E       &kp R        &kp T                                  &kp Y         &kp U        &kp I        &kp O       
&kp Q      &hm LGUI A  &hm LALT S &hm LCTRL D &hm LSHFT F  &kp G                                  &kp H         &hm RSHFT J  &hm RCTRL K  &hm RALT L  &lt NUM SEMI &hm RGUI P
           &kp Z       &kp X      &kp C       &kp V        &kp B                                  &kp N         &kp M        &kp COMMA    &kp DOT     &kp FSLH
						                                               &kp SPACE &lt SYM BSPC  &mt RSHFT TAB  &kp RET
			>;
       	};


		cole_layer {
			bindings = <
                      &kp W      &kp F       &kp P        &kp B                                  &kp J         &kp L        &kp U        &kp Y       
&kp Q     &hm LGUI A  &hm LALT R &hm LCTRL S &hm LSHFT T  &kp G                                  &kp M         &hm RSHFT N  &hm RCTRL E  &hm RALT I  &lt NUM O     &hm RGUI SEMI
          &kp Z       &kp X      &kp C       &kp D        &kp V                                  &kp K         &kp H        &kp COMMA    &kp DOT     &kp FSLH
 						                                              &kp SPACE &lt SYM BSPC  &mt RSHFT TAB  &kp RET
			>;
       	};

    

		symbol_layer {
			bindings = <
                      &kp AMPS   &kp ASTRK   &kp LPAR    &kp GRAVE                              &kp GRAVE   &kp LPAR     &kp RPAR     &none        
&sl EXT       &kp EUR   &kp DLLR   &kp PRCNT   &kp CARET   &kp SQT                              &none       &kp LBRC     &kp RBRC     &kp LBKT    &kp RBKT    &none 
            &none     &kp EXCL   &kp AT      &kp HASH    &kp DQT                                &kp BSLH    &kp PIPE     &kp PLUS     &kp EQUAL   &none
						                                             &none      &none            &kp MINUS  &kp UNDER
			>;
       	};

		numnav_layer {
			bindings = <
                      &kp N7     &kp N8      &kp N9      &none                                &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &trans       
&none        &none    &kp N4     &kp N5      &kp N6      &none                                &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT   &trans      &trans
             &none    &kp N1     &kp N2      &kp N3      &none                                &kp HOME     &kp PG_DN    &kp PG_UP    &kp END     &trans
						                                             &kp DOT     &kp N0          &none    &kp ESC
			>;
       	};

		extra_layer {
			bindings = <
                      &kp F7     &kp F8      &kp F9      &kp F10                               &none        &none        &none        &none        
&none        &none    &kp F4     &kp F5      &kp F6      &kp F11                               BT0          BT1          BT2          BT3         BT4         &bt BT_CLR
             &none    &kp F1     &kp F2      &kp F3      &kp F12                               &none        &none        &none        &none       &none 
						                                             &none       &none           &trans    &none
			>;
       	};
    };
};
